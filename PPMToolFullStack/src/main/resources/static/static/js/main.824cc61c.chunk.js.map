{"version":3,"sources":["action/types.js","action/projectActions.js","component/project/CreateProjectButton.js","component/project/ProjectItem.js","component/Dashboard.js","securityUtils/setJWTToken.js","action/securityActions.js","component/layout/Header.js","component/project/AddProject.js","reducer/errorReducer.js","reducer/projectReducer.js","reducer/backlogReducer.js","reducer/securityReducer.js","reducer/index.js","store.js","component/project/UpdateProject.js","component/projectBoard/projectTasks/ProjectTask.js","action/backlogActions.js","component/projectBoard/Backlog.js","component/projectBoard/ProjectBoard.js","component/projectBoard/projectTasks/AddProjectTask.js","component/projectBoard/projectTasks/UpdateProjectTask.js","component/layout/Landing.js","component/UserManagement/Login.js","component/UserManagement/Register.js","securityUtils/SecureRoute.js","App.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","CreateProjectButton","Fragment","to","className","ProjectItem","id","this","props","deleteProject","projectIdentifier","projectName","description","onClick","onDelete","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","AddProject","onChangeHandler","onSubmitHandler","nextProps","errors","setState","e","target","name","value","preventDefault","newProject","startDate","endDate","onSubmit","classNames","placeholder","onChange","initialState","errorReducer","action","projectReducer","filter","p","project_tasks","project_task","backlogReducer","projectSequence","booleanActionPayload","securityReducer","combineReducers","backlog","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updatedProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","projectTask","priority","summary","acceptanceCriteria","onDeleteClick","Backlog","tasks","projectTasks","todoItems","inProgressItems","doneItems","i","length","el","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","createdAt","getProjectTask","updateProjectTask","classnames","moment","format","patch","Landing","Login","username","password","onCHangeHandler","LoginRequest","login","setItem","decoded","jwt_decode","Register","fullName","confirmPassword","console","log","newUser","createNewUser","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.824cc61c.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\"\r\nexport const GET_PROJECTS = \"GET_PROJECTS\"\r\nexport const GET_PROJECT = \"GET_PROJECT\"\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\"\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\"\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\"\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { GET_ERRORS , GET_PROJECTS,GET_PROJECT,DELETE_PROJECT} from \"./types\"\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n\r\n    try {\r\n            const res = await axios.get(`/api/project/${id}`)\r\n    dispatch({\r\n            type: GET_PROJECT,\r\n            payload:res.data\r\n        }\r\n    )\r\n    } catch (error) {\r\n        history.push(\"/dashboard\")\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    if (\r\n        window.confirm(\"Are you sure ? This will be delete the object and all the data related to it\")\r\n    ) {\r\n         await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        }\r\n    )\r\n    }\r\n       \r\n}","import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    \r\n    )\r\n}\r\n\r\nexport default CreateProjectButton\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {deleteProject} from '../../action/projectActions'\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDelete(id) {\r\n        this.props.deleteProject(id)\r\n    }\r\n\r\n    render() {\r\n        const { project } = this.props;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item board\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item update\">\r\n                                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                </li>\r\n                                </Link>\r\n                           \r\n                                <li\r\n                                    className=\"list-group-item delete\"\r\n                                    onClick={this.onDelete.bind(this,project.projectIdentifier)}\r\n                                >\r\n                                        <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                    </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject : PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, {\r\n    deleteProject\r\n})(ProjectItem)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from \"prop-types\"\r\nimport { getProjects } from '../action/projectActions'\r\nimport CreateProjectButton from './project/CreateProjectButton'\r\nimport ProjectItem from './project/ProjectItem'\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getProjects()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { projects } = this.props.project;\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"display-4 text-center\">Projects</h1>\r\n                        <br />\r\n                        <CreateProjectButton/>\r\n                        <br />\r\n                        <hr />\r\n    \r\n                        {projects.map(project => (\r\n                            <ProjectItem key={project.id} project={project} />\r\n                          ))}\r\n    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n   \r\n        )\r\n    }\r\n}\r\n\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        project:state.project\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n    getProjects\r\n})(Dashboard)","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token\r\n    }else{\r\n        delete axios.defaults.headers.common[\"Authorization\"]\r\n    }\r\n}\r\n\r\nexport default setJWTToken","import axios from \"axios\"\r\nimport {GET_ERRORS,SET_CURRENT_USER} from \"./types\"\r\nimport jwt_decode from \"jwt-decode\"\r\nimport setJWTToken from \"../securityUtils/setJWTToken\"\r\n\r\nexport const createNewUser = (newUser,history)=> async dispatch =>{\r\n    console.log(\"NEWUSER:\",newUser);\r\n\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser)\r\n        history.push(\"/login\")\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest)\r\n        const {token} = res.data\r\n        localStorage.setItem(\"jwtToken\",token)\r\n        setJWTToken(token);\r\n\r\n        const decoded = jwt_decode(token);\r\n\r\n        dispatch({\r\n            type:SET_CURRENT_USER,\r\n            payload:decoded\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\")\r\n    setJWTToken(false)\r\n    dispatch({\r\n        type:SET_CURRENT_USER,\r\n        payload:{}\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../action/securityActions\";\r\n\r\n class Header extends Component {\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n      }\r\n    \r\n    render() {\r\n        const { validToken, user } = this.props.security;\r\n\r\n        const userIsAuthenticated = (\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                  Dashboard\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n    \r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                  <i className=\"fas fa-user-circle mr-1\" />\r\n                  {user.fullname}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/logout\"\r\n                  onClick={this.logout.bind(this)}\r\n                >\r\n                  Logout\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n    \r\n        const userIsNotAuthenticated = (\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n    \r\n        let headerLinks;\r\n    \r\n        if (validToken && user) {\r\n          headerLinks = userIsAuthenticated;\r\n        } else {\r\n          headerLinks = userIsNotAuthenticated;\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                Personal Project Management Tool\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                \r\n               {headerLinks}\r\n            </div>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    security: state.security\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { logout }\r\n  )(Header);","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../action/projectActions'\r\nimport classNames from 'classnames'\r\n\r\nclass AddProject extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = \r\n            {\r\n                \"projectName\":\"\",\r\n                \"projectIdentifier\":\"\",\r\n                \"description\": \"\",\r\n                \"startDate\": \"\",\r\n                \"endDate\": \"\",\r\n                \"errors\":{}\r\n            }\r\n        \r\n        this.onChangeHandler=this.onChangeHandler.bind(this)\r\n        this.onSubmitHandler=this.onSubmitHandler.bind(this)\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors:nextProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeHandler(e) {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n        const { projectName,projectIdentifier,description,startDate,endDate} = this.state;\r\n\r\n        const newProject = {\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            startDate,\r\n            endDate\r\n        }\r\n        this.props.createProject(newProject,this.props.history) \r\n    }\r\n\r\n    clearProject() {\r\n        this.setState({\r\n            projectName:\"\",\r\n            projectIdentifier:\"\",\r\n            description: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {errors} = this.state\r\n\r\n        return (\r\n            <div>\r\n            <div className=\"project\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h5 className=\"display-4 text-center\">Create</h5>\r\n                        <hr />\r\n                        <form onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                            className={classNames(\"form-control form-control-lg mb-2\", {\r\n                                            \"is-invalid\": errors.projectName\r\n                                        })}\r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"projectName\"\r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChangeHandler}\r\n                                        />\r\n\r\n                                        {errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                        )}\r\n                             </div>\r\n                                    \r\n                            <div className=\"form-group\">\r\n                                        <input type=\"text\"\r\n                                        className={classNames(\"form-control form-control-lg mb-2\", {\r\n                                            \"is-invalid\": errors.projectIdentifier\r\n                                        })}\r\n                                        placeholder=\"Unique Project ID\"\r\n                                        name=\"projectIdentifier\"\r\n                                        value={this.state.projectIdentifier}\r\n                                        onChange={this.onChangeHandler}\r\n                                        />\r\n                                        {errors.projectIdentifier && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                        )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                        <textarea\r\n                                        className={classNames(\"form-control form-control-lg  mb-2\", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChangeHandler}\r\n                                        />\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                        )}\r\n                                        \r\n                            </div>\r\n                            <h6>Start Date</h6>\r\n                            <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"startDate\"\r\n                                        value={this.state.startDate}\r\n                                        onChange={this.onChangeHandler}\r\n                                    />\r\n                            </div>\r\n                            <h6>Estimated End Date</h6>\r\n                            <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"endDate\"\r\n                                        value={this.state.endDate}\r\n                                        onChange={this.onChangeHandler}\r\n                                    />\r\n                            </div>\r\n    \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"save\"/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors : state.errors\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { createProject }\r\n)(AddProject)","import { GET_ERRORS } from \"../action/types\"\r\n\r\nconst initialState = {}\r\n\r\n const errorReducer= (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default errorReducer;","import { GET_PROJECT, GET_PROJECTS,DELETE_PROJECT } from \".././action/types\"\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project:{}\r\n}\r\n\r\n const projectReducer =  (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            }\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            }\r\n        case DELETE_PROJECT:\r\n                return {\r\n                    ...state,\r\n                    projects: state.projects.filter(\r\n                        p => p.projectIdentifier !== action.payload)\r\n                }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import {\r\n    GET_BACKLOG,\r\n    GET_PROJECT_TASK,\r\n    DELETE_PROJECT_TASK \r\n} from \"../action/types\"\r\n\r\nconst initialState = {\r\n    project_tasks:[],\r\n    project_task:{}\r\n}\r\n\r\n\r\nconst backlogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            }\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(\r\n                    project_task => project_task.projectSequence !== action.payload)            \r\n                };\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default backlogReducer","import { SET_CURRENT_USER } from \"../action/types\";\r\n\r\nconst initialState = {\r\n    validToken:false,\r\n    user:{}\r\n}\r\n\r\n\r\nconst booleanActionPayload = payload => {\r\n    if(payload){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nconst securityReducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                validToken:booleanActionPayload(action.payload),\r\n                user:action.payload\r\n            }\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\nexport default securityReducer","import { combineReducers } from \"redux\"\r\nimport errorReducer from \"./errorReducer\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport backlogReducer from \"./backlogReducer\"\r\nimport securityReducer from \"./securityReducer\"\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducer\"\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nlet store\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(  \r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n               )\r\n    )\r\n    \r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware))\r\n    )\r\n}\r\n\r\n\r\nexport default store","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from \"prop-types\"\r\nimport { getProject,createProject } from '../../action/projectActions'\r\nimport classNames from 'classnames'\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            \"id\": \"\",\r\n            \"projectName\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"description\": \"\",\r\n            \"startDate\": \"\",\r\n            \"endDate\": \"\",\r\n            \"errors\":{}\r\n        }\r\n\r\n        this.onChangeHandler = this.onChangeHandler.bind(this)\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params\r\n        this.props.getProject(id,this.props.history)\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors:nextProps.errors\r\n            })\r\n        }\r\n\r\n        const { id, projectName, projectIdentifier, description, startDate, endDate} = nextProps.project\r\n\r\n        this.setState({\r\n            id, projectName, projectIdentifier, description, startDate, endDate\r\n        })\r\n    }\r\n    \r\n    onChangeHandler(e) {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault()\r\n        const updatedProject= {\r\n            \"id\": this.state.id,\r\n            \"projectName\": this.state.projectName,\r\n            \"projectIdentifier\": this.state.projectIdentifier,\r\n            \"description\": this.state.description,\r\n            \"startDate\": this.state.startDate,\r\n            \"endDate\": this.state.endDate\r\n        }\r\n\r\n        this.props.createProject(updatedProject,this.props.history)\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        const {projectName, projectIdentifier, description, startDate, endDate ,errors} = this.state\r\n        return (\r\n        <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Edit Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmitHandler}>\r\n                        <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classNames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.projectName\r\n                                        })}\r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"projectName\"\r\n                                        value={projectName}\r\n                                        onChange={this.onChangeHandler}\r\n                                    />\r\n                                    {\r\n                                        errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                        )\r\n                                    }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Unique Project ID\"\r\n                                        name=\"projectIdentifier\"\r\n                                        value={projectIdentifier}\r\n                                disabled />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                                    <textarea\r\n                                    className={classNames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.description\r\n                                    })}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        onChange={this.onChangeHandler}\r\n                                    />\r\n                                    {\r\n                                        errors.description && (\r\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                        )\r\n                                    }\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" \r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"startDate\"\r\n                                        value={startDate}\r\n                                        onChange={this.onChangeHandler}\r\n                                        />\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"endDate\"\r\n                                        value={endDate}\r\n                                        onChange={this.onChangeHandler}\r\n                                        />\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"save\"/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nUpdateProject.propTypes = {\r\n    getProject : PropTypes.func.isRequired,\r\n    createProject : PropTypes.func.isRequired,\r\n    project : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project : state.project.project,\r\n    errors : state.errors\r\n })\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getProject,\r\n        createProject\r\n    }\r\n)(UpdateProject)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteProjectTask } from \"../../../action/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass ProjectTask extends Component {\r\n    onDeleteClick(backlog_id, pt_id) {\r\n        this.props.deleteProjectTask(backlog_id, pt_id);\r\n      }\r\n    render() {\r\n        const {projectTask} = this.props\r\n\r\n        let priorityString;\r\n        let priorityClass;\r\n    \r\n        if (projectTask.priority === 1) {\r\n          priorityClass = \"bg-danger text-light\";\r\n          priorityString = \"HIGH\";\r\n        }\r\n    \r\n        if (projectTask.priority === 2) {\r\n          priorityClass = \"bg-warning text-light\";\r\n          priorityString = \"MEDIUM\";\r\n        }\r\n    \r\n        if (projectTask.priority === 3) {\r\n          priorityClass = \"bg-info text-light\";\r\n          priorityString = \"LOW\";\r\n        }\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n                ID: {projectTask.projectSequence} -- Priority:{priorityString} \r\n            </div>\r\n            <div className=\"card-body bg-light\">\r\n                <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n                <p className=\"card-text text-truncate \">\r\n                {projectTask.acceptanceCriteria}\r\n                </p>\r\n\r\n                <Link to={`/updateProjecttask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`} \r\n                className=\"btn btn-primary\">\r\n                    View / Update\r\n                </Link>\r\n\r\n                <button className=\"btn btn-danger ml-4\"\r\n                onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    projectTask.projectIdentifier,\r\n                    projectTask.projectSequence\r\n                  )}\r\n                >\r\n                    Delete\r\n                </button>\r\n\r\n                 \r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(\r\n    null,\r\n    {deleteProjectTask})\r\n    (ProjectTask) \r\n","import axios from \"axios\";\r\nimport {GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK,DELETE_PROJECT_TASK} from \"../action/types\"\r\n\r\nexport const addProjectTask = (\r\n      backlog_id,\r\n      project_task,\r\n      history) => async dispatch => {\r\n    \r\n    try{\r\n        await axios.post(`/api/backlog/${backlog_id}`,project_task)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getBacklog = backlog_id => async dispatch =>{\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id,pt_id,history)=> async dispatch=>{\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        history.push(`/dashboard`)\r\n    }\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id,pt_id,project_task,history)=> async dispatch=>{\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`,project_task)\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n          });\r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if (\r\n      window.confirm(\r\n        `You are deleting project task ${pt_id}, this action cannot be undone`\r\n      )\r\n    ) {\r\n      await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: DELETE_PROJECT_TASK,\r\n        payload: pt_id\r\n      });\r\n    }\r\n  };","import React, { Component } from 'react'\r\nimport ProjectTask from './projectTasks/ProjectTask'\r\n\r\n class Backlog extends Component {\r\n    render() {\r\n        const {projectTasks} = this.props\r\n\r\n        const tasks = projectTasks.map(projectTask=>(\r\n            <ProjectTask key={projectTask.id} projectTask={projectTask}/>\r\n        ))\r\n\r\n        let todoItems = []\r\n        let inProgressItems = []\r\n        let doneItems = []\r\n\r\n\r\n        for (let i = 0; i < tasks.length; i++) {\r\n            const el = tasks[i];\r\n\r\n            if(el.props.projectTask.status === \"TO_DO\"){\r\n                todoItems.push(el)\r\n            }\r\n            if(el.props.projectTask.status === \"IN_PROGRESS\"){\r\n                inProgressItems.push(el)\r\n            }\r\n            if(el.props.projectTask.status === \"DONE\"){\r\n                doneItems.push(el)\r\n            }\r\n            \r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>TO DO</h3>\r\n                        </div>\r\n                    </div>\r\n                    {todoItems}\r\n\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>In Progress</h3>\r\n                        </div>\r\n                    </div>\r\n                    {inProgressItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Done</h3>\r\n                        </div>\r\n                    </div>\r\n                    {doneItems}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Backlog \r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport {getBacklog} from \"../../action/backlogActions\"\r\n\r\n class ProjectBoard extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            errors:{}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const{id} = this.props.match.params\r\n        this.props.getBacklog(id)\r\n    }\r\n\r\n    // componentWillReceiveProps(nextProps){\r\n    //     if(nextProps){\r\n    //         this.setState({\r\n    //             errors:nextProps.errors\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    \r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props) {\r\n          return {\r\n                errors:props.errors\r\n          };\r\n        }\r\n          return null;\r\n      }\r\n\r\n\r\n    render() {\r\n\r\n        const{id} = this.props.match.params\r\n        const {project_tasks} = this.props.backlog\r\n        const {errors} = this.state\r\n\r\n        let BoardContent;\r\n\r\n        const boardAlgorithm = (errors, projectTasks)=>{\r\n            if(projectTasks.length<1){\r\n                if(errors.projectNotFound){\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {errors.projectNotFound}\r\n                        </div>\r\n                    )\r\n                }else if (errors.projectIdentifier) {\r\n                    return (\r\n                      <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    );\r\n                  }\r\n                else{\r\n                    return(\r\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                        No Projects Tasks on this board\r\n                        </div>                    \r\n                        )\r\n                }\r\n            }else{\r\n                    return (\r\n                        <Backlog projectTasks={project_tasks}/>\r\n                    )\r\n            }\r\n        }\r\n\r\n        BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n            </Link>\r\n            <br />\r\n            <hr />\r\n            {BoardContent}\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nProjectBoard.propTypes ={\r\n    backlog:PropTypes.object.isRequired,\r\n    getBacklog:PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps =state=>({\r\n    backlog:state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getBacklog}\r\n    )(ProjectBoard);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from \"react-redux\"\r\nimport classNames from \"classnames\"\r\nimport {addProjectTask} from \"../../../action/backlogActions\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n class AddProjectTask extends Component {\r\n     \r\n    constructor(props){\r\n        super(props)\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n          };\r\n\r\n          this.onChangeHandler = this.onChangeHandler.bind(this)\r\n          this.onSubmitHandler = this.onSubmitHandler.bind(this)\r\n\r\n\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onChangeHandler(e) {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmitHandler(e){\r\n        e.preventDefault()\r\n\r\n        const {summary,acceptanceCriteria,status,priority,dueDate} = this.state\r\n        \r\n        const newTask = {\r\n            summary: summary,\r\n            acceptanceCriteria: acceptanceCriteria,\r\n            status: status,\r\n            priority: priority,\r\n            dueDate: dueDate, \r\n        }\r\n\r\n        this.props.addProjectTask(\r\n            this.state.projectIdentifier,\r\n            newTask,\r\n            this.props.history\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params\r\n        const { errors } = this.state;\r\n\r\n\r\n        return (\r\n   \r\n            <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                            Back to Project Board\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                        <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                        <form onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" \r\n                                className={classNames(\"form-control form-control-lg\",{\r\n                                    \"is-invalid\": errors.summary\r\n                                })}\r\n                                 name=\"summary\" \r\n                                 placeholder=\"Project Task summary\"\r\n                                 value={this.state.summary} \r\n                                 onChange={this.onChangeHandler}\r\n                                 />\r\n                                 \r\n                                 {errors.summary && (\r\n                                     <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                 )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea className=\"form-control form-control-lg\"\r\n                                 placeholder=\"Acceptance Criteria\" \r\n                                 name=\"acceptanceCriteria\"\r\n                                 value={this.state.acceptanceCriteria}\r\n                                 onChange={this.onChangeHandler}\r\n                                 ></textarea>\r\n                            </div>\r\n                            <h6>Due Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"dueDate\"\r\n                                value={this.state.dueDate} \r\n                                onChange={this.onChangeHandler}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <select \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"priority\"\r\n                                value={this.state.priority}\r\n                                onChange={this.onChangeHandler}\r\n\r\n                                >\r\n                                    <option value={0}>Select Priority</option>\r\n                                    <option value={1}>High</option>\r\n                                    <option value={2}>Medium</option>\r\n                                    <option value={3}>Low</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <select \r\n                                className=\"form-control form-control-lg\"\r\n                                 name=\"status\"\r\n                                 value={this.state.status}\r\n                                 onChange={this.onChangeHandler}\r\n\r\n                                 >\r\n                                    <option value=\"\">Select Status</option>\r\n                                    <option value=\"TO_DO\">TO DO</option>\r\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                    <option value=\"DONE\">DONE</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addProjectTask})\r\n    (AddProjectTask);","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport PropTypes from \"prop-types\"\r\nimport {getProjectTask,updateProjectTask} from \"../../../action/backlogActions\"\r\nimport moment from 'moment';\r\n\r\n\r\n class UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          id: \"\",\r\n          projectSequence: \"\",\r\n          summary: \"\",\r\n          acceptanceCriteria: \"\",\r\n          status: \"\",\r\n          priority: \"\",\r\n          dueDate: \"\",\r\n          projectIdentifier: \"\",\r\n          createdAt: \"\",\r\n          errors:{}\r\n        };\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.onSubmitHandler     = this.onSubmitHandler.bind(this);\r\n      }\r\n      \r\n\r\n\r\n      componentDidMount(){\r\n        const { backlog_id, pt_id } = this.props.match.params\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history)\r\n    }\r\n    \r\n\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n          if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n          }\r\n\r\n\r\n        const {\r\n          id,\r\n          projectSequence,\r\n          summary,\r\n          acceptanceCriteria,\r\n          status,\r\n          priority,\r\n          dueDate,\r\n          projectIdentifier,\r\n          createdAt  \r\n        } = nextProps.projectTask;\r\n    \r\n        this.setState({\r\n          id,\r\n          projectSequence,\r\n          summary,\r\n          acceptanceCriteria,\r\n          status,\r\n          priority,\r\n          dueDate,\r\n          projectIdentifier,\r\n          createdAt\r\n        });\r\n    }\r\n\r\n \r\n\r\n\r\n    onChangeHandler(e){\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onSubmitHandler(e){\r\n        e.preventDefault()\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            createdAt\r\n        }=this.state\r\n\r\n        const newTask={   \r\n            id,   \r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            createdAt};\r\n\r\n            this.props.updateProjectTask(projectIdentifier,projectSequence,newTask,this.props.history)        \r\n\r\n    }\r\n    \r\n\r\n\r\n\r\n    render() {\r\n        const { backlog_id } = this.props.match.params\r\n        // const { errors } = this.state;\r\n\r\n        const {\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            errors\r\n        }=this.state\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to={`/projectBoard/${backlog_id}`} className=\"btn btn-light\">\r\n                            Back to Project Board\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                        <p className=\"lead text-center\">Project Name: {projectIdentifier} + Project Task ID: {projectSequence}</p>\r\n                        <form onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg\",{\r\n                                    \"is-invalid\": errors.summary\r\n                                })}\r\n                                 name=\"summary\" \r\n                                 placeholder=\"Project Task summary\"\r\n                                 value={summary} \r\n                                 onChange={this.onChangeHandler}\r\n                                 />\r\n                                 \r\n                                 {\r\n                                     errors.summary && (\r\n                                     <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                 )\r\n                                \r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea className=\"form-control form-control-lg\"\r\n                                 placeholder=\"Acceptance Criteria\" \r\n                                 name=\"acceptanceCriteria\"\r\n                                 value={acceptanceCriteria}\r\n                                 onChange={this.onChangeHandler}\r\n                                 ></textarea>\r\n                            </div>\r\n                            <h6>Due Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"dueDate\"\r\n                                value={moment(dueDate).format('YYYY-MM-DD')} \r\n                                onChange={this.onChangeHandler}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <select \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"priority\"\r\n                                value={priority}\r\n                                onChange={this.onChangeHandler}\r\n\r\n                                >\r\n                                    <option value={0}>Select Priority</option>\r\n                                    <option value={1}>High</option>\r\n                                    <option value={2}>Medium</option>\r\n                                    <option value={3}>Low</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <select \r\n                                className=\"form-control form-control-lg\"\r\n                                 name=\"status\"\r\n                                 value={status}\r\n                                 onChange={this.onChangeHandler}\r\n\r\n                                 >\r\n                                    <option value=\"\">Select Status</option>\r\n                                    <option value=\"TO_DO\">TO DO</option>\r\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                    <option value=\"DONE\">DONE</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"save\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    projectTask: PropTypes.object.isRequired,\r\n    updateProjectTask:PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    projectTask: state.backlog.project_task,\r\n    errors:state.errors\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getProjectTask,updateProjectTask})\r\n    (UpdateProjectTask) ","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n class Landing extends Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n            <div className=\"light-overlay landing-inner text-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\r\n                            <p className=\"lead\">\r\n                                Create your account to join active projects or start you own\r\n                            </p>\r\n                            <hr />\r\n                            <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                             Sign Up\r\n                            </Link>\r\n\r\n                            <Link to=\"/login\" className=\"btn btn-lg btn-secondary\">\r\n                             Login\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    security: state.security\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(Landing);","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport classNames from 'classnames'\r\nimport {login} from \"../../action/securityActions\"\r\n\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            username:\"\",\r\n            password:\"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onCHangeHandler = this.onCHangeHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push('/dashboard')\r\n        }\r\n    }\r\n\r\n    onCHangeHandler(e){\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.security.validToken){\r\n            this.props.history.push('/dashboard')\r\n        }\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onSubmitHandler(e){\r\n        e.preventDefault()\r\n\r\n        const LoginRequest = {\r\n            username:this.state.username,\r\n            password:this.state.password\r\n        }\r\n        \r\n        this.props.login(LoginRequest)\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"login\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Log In</h1>\r\n                        <form onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"email\"\r\n                                 className={classNames(\"form-control form-control-lg mb-2\",{\r\n                                     \"is-invalid\":errors.username\r\n                                 })}\r\n                                  placeholder=\"Email Address\"\r\n                                   name=\"username\"\r\n                                   value={this.state.username}\r\n                                   onChange={this.onCHangeHandler}\r\n                                   />\r\n                                   {\r\n                                       errors.username && (\r\n                                           <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                       )\r\n                                   }\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" \r\n                                className={classNames(\"form-control form-control-lg\",{\r\n                                    \"is-invalid\":errors.password\r\n                                })}\r\n                                 placeholder=\"Password\" \r\n                                 name=\"password\"\r\n                                 value={this.state.password}\r\n                                 onChange={this.onCHangeHandler}\r\n                                 />\r\n                                 {\r\n                                    errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" value=\"Sign in\"/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nLogin.propTypes = {\r\n    login:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired,\r\n    security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps =state=>({\r\n    security:state.security,\r\n    errors:state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n    login\r\n})(Login) ","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport classNames from 'classnames'\r\nimport {createNewUser} from \"../../action/securityActions\"\r\n\r\nclass Register extends Component {\r\n\r\n\r\n    constructor(){\r\n\r\n        super()\r\n\r\n        this.state = {\r\n            username:\"\",\r\n            fullName:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        console.log(nextProps.errors);\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n\r\n\r\n    onSubmitHandler(e){\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n        }\r\n\r\n        console.log(\"NEWUSER:\",newUser);\r\n        this.props.createNewUser(newUser,this.props.history)\r\n    }\r\n\r\n\r\n    onChangeHandler(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {username, fullName, password, confirmPassword, errors} = this.state\r\n\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmitHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                    type=\"text\" \r\n                                    className={classNames(\"form-control form-control-lg mb-2\",{\r\n                                        \"is-invalid\":errors.fullName\r\n                                    })} \r\n                                    placeholder=\"Full Name\" \r\n                                    name=\"fullName\"\r\n                                    value={fullName}\r\n                                    onChange={this.onChangeHandler}\r\n                                    />\r\n                                    {\r\n                                        errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                    type=\"text\" \r\n                                    className={classNames(\"form-control form-control-lg mb-2\",{\r\n                                        \"is-invalid\":errors.username\r\n                                    })} \r\n                                    placeholder=\"Email Address (Username)\" \r\n                                    name=\"username\"\r\n                                    value={username}\r\n                                    onChange={this.onChangeHandler}\r\n                                    />\r\n                                    {\r\n                                        errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                    type=\"password\" \r\n                                    className={classNames(\"form-control form-control-lg mb-2\",{\r\n                                        \"is-invalid\":errors.password\r\n                                    })} \r\n                                    placeholder=\"Password\" \r\n                                    name=\"password\" \r\n                                    value={password}\r\n                                    onChange={this.onChangeHandler}\r\n                                    />\r\n                                    {\r\n                                        errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                    type=\"password\" \r\n                                    className={classNames(\"form-control form-control-lg mb-2\",{\r\n                                        \"is-invalid\":errors.confirmPassword\r\n                                    })} \r\n                                    placeholder=\"Confirm Password\"\r\n                                    name=\"confirmPassword\" \r\n                                    value={confirmPassword}\r\n                                    onChange={this.onChangeHandler}\r\n                                    />\r\n                                    {\r\n                                        errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" value=\"Sign up\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,{\r\n    createNewUser\r\n})(Register)","import React from 'react'\r\nimport {Route,Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nconst SecuredRoute = ({component: Component, security, ...otherProps}) => (\r\n    <Route\r\n    {...otherProps}\r\n    render= {props => \r\n      security.validToken === true ?  (\r\n        <Component {...props}/> ) \r\n      : (\r\n        <Redirect to=\"/login\"/> )\r\n    }\r\n    />\r\n)\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    security: state.security\r\n  });\r\n\r\nexport default  connect(mapStateToProps)(SecuredRoute)","import './App.css'\r\nimport Dashboard from './component/Dashboard'\r\nimport Header from './component/layout/Header'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\nimport AddProject from './component/project/AddProject'\r\nimport {Provider} from \"react-redux\"\r\nimport store from './store'\r\nimport UpdateProject from './component/project/UpdateProject'\r\nimport ProjectBoard from './component/projectBoard/ProjectBoard'\r\nimport AddProjectTask from './component/projectBoard/projectTasks/AddProjectTask'\r\nimport UpdateProjectTask from './component/projectBoard/projectTasks/UpdateProjectTask'\r\nimport Landing from './component/layout/Landing'\r\nimport Login from './component/UserManagement/Login'\r\nimport Register from './component/UserManagement/Register'\r\nimport jwt_decode from 'jwt-decode'\r\nimport setJWTToken from './securityUtils/setJWTToken'\r\nimport {SET_CURRENT_USER} from \"./action/types\"\r\nimport {logout} from \"./action/securityActions\"\r\nimport SecuredRoute from './securityUtils/SecureRoute'\r\n\r\n\r\nconst jwtToken = localStorage.jwtToken\r\n\r\nif(jwtToken){\r\n  setJWTToken(jwtToken)\r\n  const decoded_jwtToken = jwt_decode(jwtToken)\r\n  store.dispatch({\r\n    type:SET_CURRENT_USER,\r\n    payload:decoded_jwtToken\r\n  })\r\n\r\n  const currentTime = Date.now() / 1000\r\n\r\n  if(decoded_jwtToken.exp < currentTime){\r\n    store.dispatch(logout())\r\n    window.location.href = \"/\"\r\n\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n      <div className=\"App\">\r\n        <Header/>\r\n\r\n\r\n        {\r\n          //PUBLIC ROUTES\r\n        }\r\n        <Route exact path=\"/\"  component={Landing}/>\r\n        <Route exact path=\"/login\" component={Login}/>\r\n        <Route exact path=\"/register\" component={Register}/>\r\n\r\n\r\n        {\r\n          //PRIVATE ROUTES\r\n        }\r\n\r\n        <Switch> \r\n        \r\n        <SecuredRoute  exact path=\"/dashboard\"  component={Dashboard}/>\r\n        <SecuredRoute  exact path=\"/addProject\" component={AddProject}/>\r\n        <SecuredRoute  exact path=\"/updateProject/:id\" component={UpdateProject}/>\r\n        <SecuredRoute  exact path=\"/projectBoard/:id\" component={ProjectBoard}/>\r\n        <SecuredRoute  exact path=\"/addProjecttask/:id\" component={AddProjectTask}/>\r\n        <SecuredRoute  exact path=\"/updateProjecttask/:backlog_id/:pt_id\" component={UpdateProjectTask}/>\r\n\r\n        </Switch>\r\n\r\n      \r\n        </div>\r\n     </Router>\r\n    </Provider>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}